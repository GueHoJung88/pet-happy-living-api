"""Initial database setup

Revision ID: 489ca985fff4
Revises: 
Create Date: 2025-07-29 21:38:50.591612

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '489ca985fff4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_index(op.f('ix_weather_data_id'), table_name='weather_data')
    op.drop_index(op.f('ix_weather_data_location'), table_name='weather_data')
    op.drop_table('weather_data')
    op.drop_table('seoul_pet_clinics')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('seoul_pet_clinics',
    sa.Column('mgt_no', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('opnsfteamcode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('apv_perm_ymd', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('apv_cancel_ymd', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('trd_state_gbn', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('trd_state_nm', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dtl_state_gbn', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dtl_state_nm', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dcby_md', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('clg_st_dt', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('clg_end_dt', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ropn_ymd', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('site_tel', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('site_area', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('site_post_no', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('site_whl_addr', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rdn_whl_addr', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rdn_post_no', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bplc_nm', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_mod_ts', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('update_gbn', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('update_dt', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('uptae_nm', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('x', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('y', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lind_job_gbn_nm', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('lind_prcb_gbn_nm', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('lind_seq_no', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('rgtmbds_no', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('totep_num', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('mgt_no', name=op.f('seoul_pet_clinics_pkey'))
    )
    op.create_table('weather_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('current_temp', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('weather_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('air_quality', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('crawled_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('weather_data_pkey'))
    )
    op.create_index(op.f('ix_weather_data_location'), 'weather_data', ['location'], unique=False)
    op.create_index(op.f('ix_weather_data_id'), 'weather_data', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('registered_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('username', name=op.f('users_username_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ### 